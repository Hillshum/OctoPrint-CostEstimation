###
### Simple script to build a zip file of the whole repository
###

name: Build Plugin Action
on: [push, release]
jobs:
  build:
    name: 🏗 Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🏗 Install build dependencies
        run: python -m pip install wheel octoprint --user

      - name: "Build ZIP"
        run: python setup.py sdist --formats=zip
      
      - name: "Set ZIP_FILE"
        run: echo "ZIP_FILE=$(ls dist/*.zip)" >> $GITHUB_ENV

      - name: ⬆ Upload build result
        uses: actions/upload-artifact@v4
        with:
          name: "build"
          path: ${{ env.ZIP_FILE }}

  test-install:
    name: 🧪 Installation tests
    needs: build
    strategy:
      matrix:
        python: ["3.7", "3.8"]
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: ⬇ Download build result
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist
      - name: 🏗 Install dependencies
        run: |
          python -m pip install --upgrade wheel setuptools pip
          python -m pip install octoprint
      - name: 🧪 Test install of package
        run: |
          python -m pip install dist/OctoPrint-CostEstimation-*.zip

  release:
    name: 🚀 Release
    needs: test-install
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - name: ⬇ Download build result
        uses: actions/download-artifact@v4
        with:
          name: build
      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          release_name: ${{ github.event.release.tag_name }}
          release_notes: ${{ github.event.release.body }}
          draft: true
          tag: ${{ github.event.release.tag_name }}
          commit: ${{ github.sha }}
          body: ${{ github.event.release.body }}
          name: ${{ github.event.release.tag_name }}
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          overwrite: true
          timeout: 1200000
          endpoint: https://api.github.com